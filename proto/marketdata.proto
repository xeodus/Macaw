syntax = "proto3";
package market_data;

// Bidirectional streaming RPC for market data

service MarketDataService {
    rpc StreamMarketData(StreamRequest) return (stream MarketData);
}

message MarketRequest {
    string request_id = 1;
    RequestType type = 2;
    string instrument_id = 3;

    enum RequestType {
        SUBSCRIBE = 0;
        UNSUBSCRIBE = 1;
    }
}

message MarketDataResponse {
    string request_id = 1;
    ResponseType type = 2;
    string instrument_id = 3;
    oneof data {
        OrderBookSnapshot snapshot = 4;
        OrderBookUpdate update = 5;
    }

    enum ResponseType {
        SNAPSHOT = 0;
        UPDATE = 1;
        ERROR = 2;
    }
}

message OrderBookSnapshot {
    repeated PriceLevel bids = 1;
    repeated PriceLevel asks = 2;
    int64 timestamp = 3;
}

message OrderBookUpdate {
    repeated PriceLevelUpdate bids = 1;
    repeated PriceLevelUpdate asks = 2;
    int64 timestamp = 3;
    int64 sequence_number = 4;
}

message ContractSpecification {
    int32 orderbook_depth;
}

message PriceLevel {
    double price = 1;
    double quantity = 2;
    int32 order_count = 3;
}

message PriceLevelUpdate {
    double price = 1;
    double quantity = 2;
    int32 order_count = 3;
    UpdateAction action = 4;
}

UpdateAction {
    ADD = 0;
    UPDATE = 1;
    DELETE = 2;
}
